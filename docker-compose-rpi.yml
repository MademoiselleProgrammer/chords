version: '2'

# The CHORDS configuration for docker-compose. 
#
# It defines a MyQSL database service (chords_mysql), a CHORDS
# Ruby on Rails web server (chords_app), and a persistent 
# database volume (mysql-data).
#
# This configuration is used to both build the chords_app image,
# and to deploy the CHORDS system. Dockerfile provides the recipe
# for chords_app.
#
# To build and upload the chords_app image:
#   cd <directory containing the CHORDS project>
#   docker-compose -f docker-compose-rpi.yml build
#   docker push ncareol/chords_app_rpi
#
# To deploy/start/stop CHORDS:
#   docker-compose -f docker-compose-rpi.yml pull
#   docker-compose -f docker-compose-rpi.yml -p chords up -d
#   docker-compose -f docker-compose-rpi.yml -p chords down

services:
  app:
    container_name: chords_app
    build: .
    image: ncareol/chords_app_rpi
    volumes:
      - mysql-data:/var/lib/mysql
    command: bash -c "dos2unix ./chords_start.sh && chmod a+x ./chords_start.sh && ./chords_start.sh"
    ports:
        - "80:80"
    links:
      - mysql

  mysql:
    container_name: chords_mysql
    image: hypriot/rpi-mysql
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
      - MYSQL_USER=chords_demo_user
      - MYSQL_PASSWORD=chords_ec_demo

volumes:
  mysql-data: 
  
 
