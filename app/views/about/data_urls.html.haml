- # Create the query string for submitting measurements for all variables
- vquery = ''
- i = 0
- vquery = '&'
- @varnames.each do |v|
- vquery += v[0]
- vquery += '='
- vquery += v[1].gsub(/\s+/, "")
- if i < @varnames.count-1
- vquery += '&'
- end
- i = i + 1
- end
%h1 CHORDS Data URLs
%div
  %strong URLs for data ingest and download
  %br/
  %strong
    Instrument: #{@instrument.name} (id: #{@instrument.id})
  %br/
  Although this example is for a specific instrument, the syntax is common to all of them.
  %i instrument_id
  specifies the instrument. For putting data, there is a list of variable short names with their corresponding
  measurement value. All of the qualifiers (i.e. the fields following "?" and "") are order independent.
  %br/
  %br/
  .table-responsive
    %table.table.table-striped
      %tr
        %th Action
        %th URL format
        %th Qualifiers
        %th Example
      %tr
        %td Put data
        %td
        %td at, key, test
        %td
          - if @varnames.count  0
            = url_for(:only_path = false,  :controller = 'measurements', :action = 'url_create', :instrument_id = @instrument.id)
            = vquery
            \=2015-08-20T19:50:28=KeyValue
      %tr
        %td Fetch a CSV file
        %td .csv
        %td start, end, last
        %td
          - if @varnames.count  0
            = url_for(:only_path = false,  :controller = 'instruments', :action = 'show', :id = @instrument.id)
            \.csv?start=2015-08-01T00:30=2015-08-20T12:30
      %tr
        %td Fetch a JSON file
        %td .jsf
        %td start, end, last
        %td
          - if @varnames.count  0
            = url_for(:only_path = false,  :controller = 'instruments', :action = 'show', :id = @instrument.id)
            \.jsf
      %tr
        %td Fetch JSON
        %td .json
        %td start, end, last
        %td
          - if @varnames.count  0
            = url_for(:only_path = false,  :controller = 'instruments', :action = 'show', :id = @instrument.id)
            \.json?last
  .table-responsive
    %table.table.table-striped
      %tr
        %th
          Optional
          %br>/
          Qualifiers
        %th Meaning
      %tr
        %td
          at=
          %i time
        %td
          A time to assign to the measurement. If not present, the measurement will
          be time stamped with the time that it was received by the portal.
      %tr
        %td
          key=
          %i key
        %td
          An optional validation key. It is required if "Require the security key in order to submit a measurement"
          is checked in the configuration. The key value is also specified in the configuration.
      %tr
        %td test
        %td
          If present, this measurement will be marked as a test value.
          Test values can be deleted from the database using the "Delete Test Button" on the instrument page.
      %tr
        %td
          start=
          %i time
        %td A start time for the returned measurements.
      %tr
        %td
          end=
          %i time
        %td An end time for the returned measurements.
      %tr
        %td last
        %td Return all measurements for the most recent measurement time stamp.
  %ul{:style => "margin-top: 0"}
    %li
      The optional qualifier section begins with a "?", followed by one or more qualifiers. Each is separated by "".
      Some qualifiers (e.g. at, start and end) have an associated value.
      %li Time qualifiers (at, start and end) are in ISO8061 format.
      %li If none of the time qualifiers are present for a data fetch, measurements for the current day are returned.
