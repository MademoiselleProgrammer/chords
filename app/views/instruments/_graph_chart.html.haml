- if @var_to_plot.minimum_plot_value
  - min_y_axis_json = "min: #{@var_to_plot.minimum_plot_value},"
- else
  - min_y_axis_json = ""

- if @var_to_plot.maximum_plot_value
  - max_y_axis_json = "max: #{@var_to_plot.maximum_plot_value},"
- else
  - max_y_axis_json = ""


:javascript
  var live_chart; 
  var last_time = 0;
  
  function requestData() 
  {
    $.getJSON(
    '/instruments/#{@instrument.id}/live?var=#{@var_to_plot.shortname}&after='+last_time,
    function(live_data) 
      {
        var points         = live_data["points"]
        var display_points = live_data["display_points"]
        var refresh_msecs  = live_data["refresh_msecs"];
  
        // Trim the graph if the display width is decreased
        while (live_chart.series[0].data.length > display_points) {
          live_chart.series[0].removePoint(0, false);
        }
  
        var i;
        for (i = 0; i < points.length; i++) {
          if (points[i][0] > last_time) {
            var shift = live_chart.series[0].data.length >= display_points;
            live_chart.series[0].addPoint(points[i], false, shift);
            last_time = points[i][0]
          }
        }
  
        live_chart.redraw();
        setTimeout(requestData, refresh_msecs);    
      }
    );
  }
  
  $(document).ready(function () {
    Highcharts.setOptions({
      global: { 
        timezoneOffset: #{@tz_offset_mins}
      },
    });
  
    live_chart = new Highcharts.stockChart(
    {
      chart: {
        renderTo: 'instrument_live_chart',
        type: 'line',
        zoomType: 'x',
        animation: Highcharts.svg, // don't animate in old IE
        marginRight: 10
      },
      rangeSelector: {
          allButtonsEnabled: true,
          selected: 2
      },      
      credits: { enabled: false, }, 
      title: { text: #{title} },
      xAxis: {             
        title: {
          text: '#{@tz_name.html_safe}'
        },
        type: 'datetime', 
        tickPixelInterval: 150 
      },
      yAxis: { 
        #{min_y_axis_json}
        #{max_y_axis_json}
        title: { text: '#{@var_to_plot.name} (#{@var_to_plot.units})' },
        plotLines: [{
          value: 0,
          width: 1,
          color: '#808080'
        }]
      },
      tooltip: {
        formatter: function () {
          return '<b>' + this.series.name + '</b><br/>' +
            Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
            Highcharts.numberFormat(this.y, 2);
          }
        },
      legend: { enabled: true },
      exporting: { enabled: false },
      series: #{series},
    });
      
    // Make first data request
    requestData();
    }
  );
